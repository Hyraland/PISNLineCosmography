Auto-assigning NUTS sampler...
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Initializing NUTS using jitter+adapt_diag...
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 0/3665 [00:00<?, ?it/s]INFO (theano.gof.compilelock): Waiting for existing lock by unknown process (I am process '22213')
INFO (theano.gof.compilelock): Waiting for existing lock by process '22211' (I am process '22214')
INFO (theano.gof.compilelock): To manually release the lock, delete /Users/wfarr/.theano/compiledir_Darwin-17.7.0-x86_64-i386-64bit-i386-3.6.6-64/lock_dir
INFO (theano.gof.compilelock): To manually release the lock, delete /Users/wfarr/.theano/compiledir_Darwin-17.7.0-x86_64-i386-64bit-i386-3.6.6-64/lock_dir
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There were 9 divergences after tuning. Increase `target_accept` or reparameterize.
There were 9 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 1/3665 [01:11<72:31:11, 71.25s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 2/3665 [01:47<61:41:36, 60.63s/it]There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 3/3665 [01:52<44:47:10, 44.03s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 72 divergences after tuning. Increase `target_accept` or reparameterize.
The acceptance probability does not match the target. It is 0.8753879071914762, but should be close to 0.95. Try to increase the number of tuning steps.
There were 74 divergences after tuning. Increase `target_accept` or reparameterize.
The acceptance probability does not match the target. It is 0.8900080445388028, but should be close to 0.95. Try to increase the number of tuning steps.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
  0%|          | 4/3665 [02:00<33:53:09, 33.32s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
There were 11 divergences after tuning. Increase `target_accept` or reparameterize.
There were 12 divergences after tuning. Increase `target_accept` or reparameterize.
There were 15 divergences after tuning. Increase `target_accept` or reparameterize.
There were 17 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 5/3665 [02:34<34:04:53, 33.52s/it]There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 6/3665 [02:36<24:16:33, 23.88s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
  0%|          | 7/3665 [02:44<19:32:12, 19.23s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
  0%|          | 8/3665 [03:17<23:45:41, 23.39s/it]Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 9/3665 [03:17<16:42:33, 16.45s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 10/3665 [03:26<14:25:57, 14.22s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 11/3665 [03:43<15:17:10, 15.06s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There were 4 divergences after tuning. Increase `target_accept` or reparameterize.
There were 4 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 12/3665 [04:02<16:21:01, 16.11s/it]Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 13/3665 [04:14<15:05:17, 14.87s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 10 divergences after tuning. Increase `target_accept` or reparameterize.
There were 10 divergences after tuning. Increase `target_accept` or reparameterize.
There were 10 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 14/3665 [04:27<14:37:53, 14.43s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
The number of effective samples is smaller than 25% for some parameters.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 15/3665 [05:02<20:54:20, 20.62s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 5 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 16/3665 [05:12<17:25:59, 17.20s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 4 divergences after tuning. Increase `target_accept` or reparameterize.
There were 11 divergences after tuning. Increase `target_accept` or reparameterize.
There were 11 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 17/3665 [05:29<17:27:27, 17.23s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  0%|          | 18/3665 [05:51<19:00:27, 18.76s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
There were 6 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  1%|          | 19/3665 [06:06<17:45:08, 17.53s/it]There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.
There were 5 divergences after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  1%|          | 20/3665 [06:11<14:07:15, 13.95s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  1%|          | 21/3665 [06:27<14:39:29, 14.48s/it]There was 1 divergence after tuning. Increase `target_accept` or reparameterize.
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
  1%|          | 22/3665 [06:36<12:57:20, 12.80s/it]Sequential sampling (4 chains in 1 job)
NUTS: [theta, dl, eta, mcdet]
Process ForkPoolWorker-2:
Traceback (most recent call last):
  File "/Users/wfarr/anaconda3/lib/python3.6/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/Users/wfarr/anaconda3/lib/python3.6/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/multiprocessing/pool.py", line 119, in worker
    result = (True, func(*args, **kwds))
  File "./infer.py", line 121, in sample
    trace = pm.sample(draws=1000*factor, tune=1000*factor, njobs=njobs, chains=4, progressbar=progressbar, nuts_kwargs={'target_accept': 0.95})
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/sampling.py", line 405, in sample
    progressbar=progressbar, **args)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/sampling.py", line 1506, in init_nuts
    step = pm.NUTS(potential=potential, model=model, **kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/step_methods/hmc/nuts.py", line 152, in __init__
    super(NUTS, self).__init__(vars, **kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/step_methods/hmc/base_hmc.py", line 63, in __init__
    dtype=dtype, **theano_kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/step_methods/arraystep.py", line 228, in __init__
    vars, dtype=dtype, **theano_kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/model.py", line 709, in logp_dlogp_function
    return ValueGradFunction(self.logpt, grad_vars, extra_vars, **kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/pymc3/model.py", line 448, in __init__
    inputs, [self._cost_joined, grad], givens=givens, **kwargs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/compile/function.py", line 317, in function
    output_keys=output_keys)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/compile/pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/compile/function_module.py", line 1839, in orig_function
    name=name)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/compile/function_module.py", line 1487, in __init__
    accept_inplace)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/compile/function_module.py", line 181, in std_fgraph
    update_mapping=update_mapping)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/gof/fg.py", line 137, in __init__
    inputs, outputs = graph.clone(inputs, outputs)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/gof/graph.py", line 862, in clone
    equiv = clone_get_equiv(i, o, copy_inputs, copy_orphans)
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/gof/graph.py", line 916, in clone_get_equiv
    new_apply = apply.clone_with_new_inputs([memo[i] for i in apply.inputs])
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/theano/gof/graph.py", line 235, in clone_with_new_inputs
    assert isinstance(inputs, (list, tuple))
KeyboardInterrupt
Only one chain was sampled, this makes it impossible to run some convergence checks
/Users/wfarr/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:2920: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
Only one chain was sampled, this makes it impossible to run some convergence checks
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Traceback (most recent call last):
  File "/Users/wfarr/anaconda3/lib/python3.6/multiprocessing/pool.py", line 720, in next
    item = self._items.popleft()
IndexError: pop from an empty deque

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./infer.py", line 172, in <module>
    for i, t in tqdm(p.imap_unordered(sample, to_process), total=len(to_process)):
  File "/Users/wfarr/anaconda3/lib/python3.6/site-packages/tqdm/_tqdm.py", line 937, in __iter__
    for obj in iterable:
  File "/Users/wfarr/anaconda3/lib/python3.6/multiprocessing/pool.py", line 724, in next
    self._cond.wait(timeout)
  File "/Users/wfarr/anaconda3/lib/python3.6/threading.py", line 295, in wait
    waiter.acquire()
KeyboardInterrupt
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...

